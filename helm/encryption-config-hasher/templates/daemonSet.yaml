apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
  {{- include "labels.common" . | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
  {{- include "labels.selector" . | nindent 6 }}
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
    {{- include "labels.selector" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
      containers:
      - name: {{ .Chart.Name }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: "{{ .Values.registry.domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        command:
        - /encryption-config-hasher
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
        - mountPath: /etc/kubernetes/encryption/
          name: encryption-config-dir
      priorityClassName: system-node-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /etc/kubernetes/encryption
          type: ""
        name: encryption-config-dir
      terminationGracePeriodSeconds: 10
